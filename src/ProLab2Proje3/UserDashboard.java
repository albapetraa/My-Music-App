/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ProLab2Proje3;

import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hp
 */
public class UserDashboard extends javax.swing.JFrame {

    private User user = null;

    /**
     * Creates new form UserDashboard
     */
    public UserDashboard() {

        initComponents();
        tablolar.setSelectedIndex(7);
    }

    public void userKullanma(User user) {
        this.user = user;
        hesapLabel.setText("Hesap Türü: " + this.user.getUserType());
        if (this.user.getUserType().equals("Premium") && this.user.getPayChecked()) {
            premiumButton.setEnabled(false);
            premiumButton.setText("Hoşgeldin " + this.user.getUserName());
            hesapLabel.setText("Hesap Türü: Premium");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popUpMenu = new javax.swing.JPopupMenu();
        cal = new javax.swing.JMenuItem();
        calmaListesineEkle = new javax.swing.JMenu();
        pop = new javax.swing.JMenuItem();
        jazz = new javax.swing.JMenuItem();
        klasik = new javax.swing.JMenuItem();
        popUpMenu2 = new javax.swing.JPopupMenu();
        takipEt = new javax.swing.JMenuItem();
        popUpMenu3 = new javax.swing.JPopupMenu();
        cal2 = new javax.swing.JMenuItem();
        listedenCikart = new javax.swing.JMenuItem();
        popUpMenu4 = new javax.swing.JPopupMenu();
        cal3 = new javax.swing.JMenuItem();
        listedenCikart2 = new javax.swing.JMenuItem();
        popUpMenu5 = new javax.swing.JPopupMenu();
        cal4 = new javax.swing.JMenuItem();
        listedenCikart3 = new javax.swing.JMenuItem();
        popUpMenu6 = new javax.swing.JPopupMenu();
        takiptenCikart = new javax.swing.JMenuItem();
        listeGoruntule = new javax.swing.JMenuItem();
        popUpMenu7 = new javax.swing.JPopupMenu();
        calTop10 = new javax.swing.JMenuItem();
        calmaListesineEkle1 = new javax.swing.JMenu();
        pop1 = new javax.swing.JMenuItem();
        jazz1 = new javax.swing.JMenuItem();
        klasik1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        panelPopListesi = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        panelJazzListesi = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        panelKlasikListesi = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        sarkilarButon = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        takipEdilebilirKullanici = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        takipEttiklerin = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        tablolar = new javax.swing.JTabbedPane();
        sarkilarPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        sarkilarTablo = new javax.swing.JTable();
        kullaniciPopListesi = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        kullaniciPopTablo = new javax.swing.JTable();
        kullaniciJazzListesi = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        kullaniciJazzTablo = new javax.swing.JTable();
        kullaniciKlasikListesi = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        kullaniciKlasikTablo = new javax.swing.JTable();
        kullaniciListePanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        takipEdilebilirKullanicilarTablo = new javax.swing.JTable();
        takipEttiginKullanicilar = new javax.swing.JPanel();
        takipEttiginKullanicilarTablo = new javax.swing.JScrollPane();
        takipEdilenKullanicilarTablo = new javax.swing.JTable();
        top10sarkiPanel = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        top10sarkiTablo = new javax.swing.JTable();
        anaSayfa = new javax.swing.JPanel();
        topPanel = new javax.swing.JPanel();
        poptop10sarkiButon = new javax.swing.JButton();
        jazztop10sarkiButon = new javax.swing.JButton();
        klasiktop10sarkiButon = new javax.swing.JButton();
        genelTop10Buton = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        calinanSarkiLabel = new javax.swing.JLabel();
        premiumButton = new javax.swing.JButton();
        hesapLabel = new javax.swing.JLabel();

        cal.setText("Çal");
        cal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calActionPerformed(evt);
            }
        });
        popUpMenu.add(cal);

        calmaListesineEkle.setText("Çalma Listesine Ekle");

        pop.setText("Pop");
        pop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popActionPerformed(evt);
            }
        });
        calmaListesineEkle.add(pop);

        jazz.setText("Jazz");
        jazz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jazzActionPerformed(evt);
            }
        });
        calmaListesineEkle.add(jazz);

        klasik.setText("Klasik");
        klasik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                klasikActionPerformed(evt);
            }
        });
        calmaListesineEkle.add(klasik);

        popUpMenu.add(calmaListesineEkle);

        takipEt.setText("Takip Et");
        takipEt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                takipEtActionPerformed(evt);
            }
        });
        popUpMenu2.add(takipEt);

        cal2.setText("Çal");
        cal2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cal2ActionPerformed(evt);
            }
        });
        popUpMenu3.add(cal2);

        listedenCikart.setText("Çalma Listesinden Kaldır");
        listedenCikart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listedenCikartActionPerformed(evt);
            }
        });
        popUpMenu3.add(listedenCikart);

        cal3.setText("Çal");
        cal3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cal3ActionPerformed(evt);
            }
        });
        popUpMenu4.add(cal3);

        listedenCikart2.setText("Çalma Listesinden Kaldır");
        listedenCikart2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listedenCikart2ActionPerformed(evt);
            }
        });
        popUpMenu4.add(listedenCikart2);

        cal4.setText("Çal");
        cal4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cal4ActionPerformed(evt);
            }
        });
        popUpMenu5.add(cal4);

        listedenCikart3.setText("Çalma Listesinden Kaldır");
        listedenCikart3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listedenCikart3ActionPerformed(evt);
            }
        });
        popUpMenu5.add(listedenCikart3);

        takiptenCikart.setText("Takipten Çık");
        takiptenCikart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                takiptenCikartActionPerformed(evt);
            }
        });
        popUpMenu6.add(takiptenCikart);

        listeGoruntule.setText("Çalma Listelerini Görüntüle");
        listeGoruntule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listeGoruntuleActionPerformed(evt);
            }
        });
        popUpMenu6.add(listeGoruntule);

        calTop10.setText("Çal");
        calTop10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calTop10ActionPerformed(evt);
            }
        });
        popUpMenu7.add(calTop10);

        calmaListesineEkle1.setText("Çalma Listesine Ekle");

        pop1.setText("Pop");
        pop1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pop1ActionPerformed(evt);
            }
        });
        calmaListesineEkle1.add(pop1);

        jazz1.setText("Jazz");
        jazz1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jazz1ActionPerformed(evt);
            }
        });
        calmaListesineEkle1.add(jazz1);

        klasik1.setText("Klasik");
        klasik1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                klasik1ActionPerformed(evt);
            }
        });
        calmaListesineEkle1.add(klasik1);

        popUpMenu7.add(calmaListesineEkle1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Müzik Dosyam");

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        panelPopListesi.setOpaque(false);
        panelPopListesi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelPopListesiMouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Pop");

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProLab2Proje3/icons/play.png"))); // NOI18N

        javax.swing.GroupLayout panelPopListesiLayout = new javax.swing.GroupLayout(panelPopListesi);
        panelPopListesi.setLayout(panelPopListesiLayout);
        panelPopListesiLayout.setHorizontalGroup(
            panelPopListesiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPopListesiLayout.createSequentialGroup()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelPopListesiLayout.setVerticalGroup(
            panelPopListesiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPopListesiLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelPopListesiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPopListesiLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel4))
                    .addComponent(jLabel13))
                .addGap(21, 21, 21))
        );

        panelJazzListesi.setOpaque(false);
        panelJazzListesi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelJazzListesiMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Jazz");

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProLab2Proje3/icons/play.png"))); // NOI18N

        javax.swing.GroupLayout panelJazzListesiLayout = new javax.swing.GroupLayout(panelJazzListesi);
        panelJazzListesi.setLayout(panelJazzListesiLayout);
        panelJazzListesiLayout.setHorizontalGroup(
            panelJazzListesiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelJazzListesiLayout.createSequentialGroup()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelJazzListesiLayout.setVerticalGroup(
            panelJazzListesiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelJazzListesiLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelJazzListesiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelJazzListesiLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1))
                    .addComponent(jLabel14))
                .addContainerGap())
        );

        panelKlasikListesi.setOpaque(false);
        panelKlasikListesi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelKlasikListesiMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Klasik");

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProLab2Proje3/icons/play.png"))); // NOI18N

        javax.swing.GroupLayout panelKlasikListesiLayout = new javax.swing.GroupLayout(panelKlasikListesi);
        panelKlasikListesi.setLayout(panelKlasikListesiLayout);
        panelKlasikListesiLayout.setHorizontalGroup(
            panelKlasikListesiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelKlasikListesiLayout.createSequentialGroup()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelKlasikListesiLayout.setVerticalGroup(
            panelKlasikListesiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelKlasikListesiLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelKlasikListesiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelKlasikListesiLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel3))
                    .addComponent(jLabel15))
                .addContainerGap())
        );

        sarkilarButon.setOpaque(false);
        sarkilarButon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sarkilarButonMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Şarkılar");

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProLab2Proje3/icons/music.png"))); // NOI18N

        javax.swing.GroupLayout sarkilarButonLayout = new javax.swing.GroupLayout(sarkilarButon);
        sarkilarButon.setLayout(sarkilarButonLayout);
        sarkilarButonLayout.setHorizontalGroup(
            sarkilarButonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sarkilarButonLayout.createSequentialGroup()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );
        sarkilarButonLayout.setVerticalGroup(
            sarkilarButonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sarkilarButonLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sarkilarButonLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel10))
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Çalma Listelerin");

        takipEdilebilirKullanici.setOpaque(false);
        takipEdilebilirKullanici.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                takipEdilebilirKullaniciMouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Takip Edebileceğiniz Kullanıcılar");

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProLab2Proje3/icons/canfollow.png"))); // NOI18N

        javax.swing.GroupLayout takipEdilebilirKullaniciLayout = new javax.swing.GroupLayout(takipEdilebilirKullanici);
        takipEdilebilirKullanici.setLayout(takipEdilebilirKullaniciLayout);
        takipEdilebilirKullaniciLayout.setHorizontalGroup(
            takipEdilebilirKullaniciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, takipEdilebilirKullaniciLayout.createSequentialGroup()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        takipEdilebilirKullaniciLayout.setVerticalGroup(
            takipEdilebilirKullaniciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(takipEdilebilirKullaniciLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addContainerGap())
            .addGroup(takipEdilebilirKullaniciLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        takipEttiklerin.setOpaque(false);
        takipEttiklerin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                takipEttiklerinMouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Takip Ettiğin Kullanıcılar");

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProLab2Proje3/icons/following.png"))); // NOI18N

        javax.swing.GroupLayout takipEttiklerinLayout = new javax.swing.GroupLayout(takipEttiklerin);
        takipEttiklerin.setLayout(takipEttiklerinLayout);
        takipEttiklerinLayout.setHorizontalGroup(
            takipEttiklerinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, takipEttiklerinLayout.createSequentialGroup()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        takipEttiklerinLayout.setVerticalGroup(
            takipEttiklerinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, takipEttiklerinLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(takipEttiklerinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addGroup(takipEttiklerinLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel7)))
                .addContainerGap())
        );

        jPanel2.setOpaque(false);
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Ana Sayfa");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 11, 80, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProLab2Proje3/icons/home.png"))); // NOI18N
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 40, 34));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(sarkilarButon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelKlasikListesi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelJazzListesi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelPopListesi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(takipEdilebilirKullanici, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(takipEttiklerin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sarkilarButon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(takipEdilebilirKullanici, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(takipEttiklerin, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelPopListesi, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelJazzListesi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelKlasikListesi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jPanel4.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 700, 40));

        sarkilarTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Şarkı Adı", "Sanatçı", "Albüm", "Tür", "Tarih", "Süre"
            }
        ));
        sarkilarTablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                sarkilarTabloMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(sarkilarTablo);

        javax.swing.GroupLayout sarkilarPanelLayout = new javax.swing.GroupLayout(sarkilarPanel);
        sarkilarPanel.setLayout(sarkilarPanelLayout);
        sarkilarPanelLayout.setHorizontalGroup(
            sarkilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        sarkilarPanelLayout.setVerticalGroup(
            sarkilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sarkilarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(136, Short.MAX_VALUE))
        );

        tablolar.addTab("Şarkılar", sarkilarPanel);

        kullaniciPopTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Şarkı Adı", "Sanatçı", "Albüm", "Tarih", "Süre"
            }
        ));
        kullaniciPopTablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                kullaniciPopTabloMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(kullaniciPopTablo);

        javax.swing.GroupLayout kullaniciPopListesiLayout = new javax.swing.GroupLayout(kullaniciPopListesi);
        kullaniciPopListesi.setLayout(kullaniciPopListesiLayout);
        kullaniciPopListesiLayout.setHorizontalGroup(
            kullaniciPopListesiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        kullaniciPopListesiLayout.setVerticalGroup(
            kullaniciPopListesiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kullaniciPopListesiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE))
        );

        tablolar.addTab("Pop", kullaniciPopListesi);

        kullaniciJazzTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Şarkı Adı", "Sanatçı", "Albüm", "Tarih", "Süre"
            }
        ));
        kullaniciJazzTablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                kullaniciJazzTabloMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(kullaniciJazzTablo);

        javax.swing.GroupLayout kullaniciJazzListesiLayout = new javax.swing.GroupLayout(kullaniciJazzListesi);
        kullaniciJazzListesi.setLayout(kullaniciJazzListesiLayout);
        kullaniciJazzListesiLayout.setHorizontalGroup(
            kullaniciJazzListesiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        kullaniciJazzListesiLayout.setVerticalGroup(
            kullaniciJazzListesiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kullaniciJazzListesiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE))
        );

        tablolar.addTab("Jazz", kullaniciJazzListesi);

        kullaniciKlasikTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Şarkı Adı", "Sanatçı", "Albüm", "Tarih", "Süre"
            }
        ));
        kullaniciKlasikTablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                kullaniciKlasikTabloMouseReleased(evt);
            }
        });
        jScrollPane4.setViewportView(kullaniciKlasikTablo);

        javax.swing.GroupLayout kullaniciKlasikListesiLayout = new javax.swing.GroupLayout(kullaniciKlasikListesi);
        kullaniciKlasikListesi.setLayout(kullaniciKlasikListesiLayout);
        kullaniciKlasikListesiLayout.setHorizontalGroup(
            kullaniciKlasikListesiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        kullaniciKlasikListesiLayout.setVerticalGroup(
            kullaniciKlasikListesiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kullaniciKlasikListesiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE))
        );

        tablolar.addTab("Klasik", kullaniciKlasikListesi);

        takipEdilebilirKullanicilarTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Şarkı Adı", "Sanatçı", "Albüm", "Tür", "Tarih", "Süre"
            }
        ));
        takipEdilebilirKullanicilarTablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                takipEdilebilirKullanicilarTabloMouseReleased(evt);
            }
        });
        jScrollPane5.setViewportView(takipEdilebilirKullanicilarTablo);

        javax.swing.GroupLayout kullaniciListePanelLayout = new javax.swing.GroupLayout(kullaniciListePanel);
        kullaniciListePanel.setLayout(kullaniciListePanelLayout);
        kullaniciListePanelLayout.setHorizontalGroup(
            kullaniciListePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        kullaniciListePanelLayout.setVerticalGroup(
            kullaniciListePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kullaniciListePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE))
        );

        tablolar.addTab("Kullanıcılar", kullaniciListePanel);

        takipEdilenKullanicilarTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Şarkı Adı", "Sanatçı", "Albüm", "Tür", "Tarih", "Süre"
            }
        ));
        takipEdilenKullanicilarTablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                takipEdilenKullanicilarTabloMouseReleased(evt);
            }
        });
        takipEttiginKullanicilarTablo.setViewportView(takipEdilenKullanicilarTablo);

        javax.swing.GroupLayout takipEttiginKullanicilarLayout = new javax.swing.GroupLayout(takipEttiginKullanicilar);
        takipEttiginKullanicilar.setLayout(takipEttiginKullanicilarLayout);
        takipEttiginKullanicilarLayout.setHorizontalGroup(
            takipEttiginKullanicilarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(takipEttiginKullanicilarTablo, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        takipEttiginKullanicilarLayout.setVerticalGroup(
            takipEttiginKullanicilarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, takipEttiginKullanicilarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(takipEttiginKullanicilarTablo, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE))
        );

        tablolar.addTab("Takip Ettiğin Kullanıcılar", takipEttiginKullanicilar);

        top10sarkiTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Şarkı Adı", "Sanatçı", "Albüm", "Tür", "Tarih", "Süre"
            }
        ));
        top10sarkiTablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                top10sarkiTabloMouseReleased(evt);
            }
        });
        jScrollPane6.setViewportView(top10sarkiTablo);

        javax.swing.GroupLayout top10sarkiPanelLayout = new javax.swing.GroupLayout(top10sarkiPanel);
        top10sarkiPanel.setLayout(top10sarkiPanelLayout);
        top10sarkiPanelLayout.setHorizontalGroup(
            top10sarkiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        top10sarkiPanelLayout.setVerticalGroup(
            top10sarkiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(top10sarkiPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tablolar.addTab("Top 10", top10sarkiPanel);

        poptop10sarkiButon.setText("Pop En iyi 10 Listesi");
        poptop10sarkiButon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                poptop10sarkiButonMouseClicked(evt);
            }
        });

        jazztop10sarkiButon.setText("Jazz En İyi 10 Listesi");
        jazztop10sarkiButon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jazztop10sarkiButonMouseClicked(evt);
            }
        });

        klasiktop10sarkiButon.setText("Klasik En İyi 10 Listesi");
        klasiktop10sarkiButon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                klasiktop10sarkiButonMouseClicked(evt);
            }
        });

        genelTop10Buton.setText("Genel En İyi 10 Listesi");
        genelTop10Buton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                genelTop10ButonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topPanelLayout.createSequentialGroup()
                .addComponent(poptop10sarkiButon, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jazztop10sarkiButon, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(klasiktop10sarkiButon, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(genelTop10Buton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topPanelLayout.createSequentialGroup()
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(poptop10sarkiButon, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
                    .addComponent(jazztop10sarkiButon, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(genelTop10Buton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(klasiktop10sarkiButon, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout anaSayfaLayout = new javax.swing.GroupLayout(anaSayfa);
        anaSayfa.setLayout(anaSayfaLayout);
        anaSayfaLayout.setHorizontalGroup(
            anaSayfaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 700, Short.MAX_VALUE)
        );
        anaSayfaLayout.setVerticalGroup(
            anaSayfaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tablolar.addTab("Ana Sayfa", anaSayfa);

        jPanel4.add(tablolar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 56, -1, 510));

        jPanel9.setBackground(new java.awt.Color(0, 0, 0));

        calinanSarkiLabel.setForeground(new java.awt.Color(255, 255, 255));
        calinanSarkiLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(calinanSarkiLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(calinanSarkiLabel)
                .addContainerGap())
        );

        jPanel4.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 559, 697, 40));

        premiumButton.setText("Premium Kullanıcı Olmak İçin Tıkla");
        premiumButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                premiumButtonActionPerformed(evt);
            }
        });
        jPanel4.add(premiumButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(501, 0, 196, -1));

        hesapLabel.setText("Hesap Türü:");
        jPanel4.add(hesapLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 4, 142, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sarkilarButonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sarkilarButonMouseClicked
        tablolar.setVisible(true);
        tablolar.setSelectedIndex(0);
        DefaultTableModel model = new DefaultTableModel(new String[]{"#", "Şarkı Adı", "Sanatçı", "Albüm", "Tür", "Tarih", "Süre"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "SELECT sarkilar.sarkiId, sarkilar.sarkiAdi, sanatcilar.sanatciAdi,  albumler.albumAdi,sarkilar.sarkiTur,sarkilar.sarkiTarih ,sarkilar.sarkiSure "
                    + "FROM sarkilar,albumler,sanatcilar "
                    + "WHERE sarkilar.albumId = albumler.albumId && sarkilar.sarkiciId = sanatcilar.sanatciId";

            Statement ifade = conn.createStatement();
            ResultSet rs = ifade.executeQuery(query);
            while (rs.next()) {
                String q = rs.getString("sarkilar.sarkiId");
                String b = rs.getString("sanatcilar.sanatciAdi");
                String a = rs.getString("sarkilar.sarkiAdi");
                String c = rs.getString("albumler.albumAdi");
                String c2 = rs.getString("sarkilar.sarkiTur");
                String d = rs.getString("sarkilar.sarkiTarih");
                String e = rs.getString("sarkilar.sarkiSure");

                model.addRow(new Object[]{q, a, b, c, c2, d, e});

            }
            sarkilarTablo.setModel(model);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
    }//GEN-LAST:event_sarkilarButonMouseClicked

    private void sarkilarTabloMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sarkilarTabloMouseReleased
        if (evt.getButton() == MouseEvent.BUTTON3) {
            if (evt.isPopupTrigger() && sarkilarTablo.getSelectedRowCount() != 0) {
                popUpMenu.show(evt.getComponent(), evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_sarkilarTabloMouseReleased

    public void kullaniciPopTablosuGuncelle() {
        DefaultTableModel model = new DefaultTableModel(new String[]{"#", "Şarkı Adı", "Sanatçı", "Albüm", "Tür", "Tarih", "Süre"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "SELECT sarkilar.sarkiId, sarkilar.sarkiAdi, sanatcilar.sanatciAdi,  albumler.albumAdi,sarkilar.sarkiTur,sarkilar.sarkiTarih ,sarkilar.sarkiSure "
                    + "FROM sarkilar,albumler,sanatcilar "
                    + "WHERE sarkilar.albumId = albumler.albumId && sarkilar.sarkiciId = sanatcilar.sanatciId && sarkilar.sarkiId IN(SELECT playlistsongs.songId "
                    + "FROM playlists,playlistsongs "
                    + "WHERE playlists.playlistId = playlistsongs.playlistId && playlists.playlistOwnerId =" + this.user.getUserId() + " && playlists.playlistId = " + this.user.getUserPlaylistIds().get(0) + ")";

            Statement ifade = conn.createStatement();
            ResultSet rs = ifade.executeQuery(query);
            while (rs.next()) {
                String q = rs.getString("sarkilar.sarkiId");
                String a = rs.getString("sarkilar.sarkiAdi");
                String b = rs.getString("sanatcilar.sanatciAdi");
                String c = rs.getString("albumler.albumAdi");
                String c2 = rs.getString("sarkilar.sarkiTur");
                String d = rs.getString("sarkilar.sarkiTarih");
                String e = rs.getString("sarkilar.sarkiSure");

                model.addRow(new Object[]{q, a, b, c, c2, d, e});

            }
            kullaniciPopTablo.setModel(model);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);
        }

    }

    private void popActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popActionPerformed
        int userPopPlaylistId = this.user.getUserPlaylistIds().get(0);
        int row = sarkilarTablo.getSelectedRow();
        int songId = Integer.parseInt(sarkilarTablo.getModel().getValueAt(row, 0).toString());
        if (sarkilarTablo.getModel().getValueAt(row, 4).toString().equals("Pop")) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
                System.out.println("Veritabanına Bağlandı.");

                String query = "INSERT INTO playlistsongs(playlistId,songId) "
                        + "VALUES('" + userPopPlaylistId + "','" + songId + "')";

                Statement ifade = conn.createStatement();
                ifade.execute(query);
                kullaniciPopTablosuGuncelle();

            } catch (SQLException | ClassNotFoundException e) {
                System.out.println("Veritabanına Bağlanamadı." + e);

            }
        } else {
            System.out.println("Müzik türü ile playlist türü aynı olmalı");
        }

    }//GEN-LAST:event_popActionPerformed

    private void panelPopListesiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelPopListesiMouseClicked
        tablolar.setVisible(true);
        tablolar.setSelectedIndex(1);
        DefaultTableModel model = new DefaultTableModel(new String[]{"#", "Şarkı Adı", "Sanatçı", "Albüm", "Tür", "Tarih", "Süre"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "SELECT sarkilar.sarkiId, sarkilar.sarkiAdi, sanatcilar.sanatciAdi,  albumler.albumAdi,sarkilar.sarkiTur,sarkilar.sarkiTarih ,sarkilar.sarkiSure "
                    + "FROM sarkilar,albumler,sanatcilar "
                    + "WHERE sarkilar.albumId = albumler.albumId && sarkilar.sarkiciId = sanatcilar.sanatciId && sarkilar.sarkiId IN(SELECT playlistsongs.songId "
                    + "FROM playlists,playlistsongs "
                    + "WHERE playlists.playlistId = playlistsongs.playlistId && playlists.playlistOwnerId =" + this.user.getUserId() + " && playlists.playlistId = " + this.user.getUserPlaylistIds().get(0) + ")";

            Statement ifade = conn.createStatement();
            ResultSet rs = ifade.executeQuery(query);
            while (rs.next()) {
                String q = rs.getString("sarkilar.sarkiId");
                String a = rs.getString("sarkilar.sarkiAdi");
                String b = rs.getString("sanatcilar.sanatciAdi");
                String c = rs.getString("albumler.albumAdi");
                String c2 = rs.getString("sarkilar.sarkiTur");
                String d = rs.getString("sarkilar.sarkiTarih");
                String e = rs.getString("sarkilar.sarkiSure");

                model.addRow(new Object[]{q, a, b, c, c2, d, e});

            }
            kullaniciPopTablo.setModel(model);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);
        }
    }//GEN-LAST:event_panelPopListesiMouseClicked

    private void jazzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jazzActionPerformed
        int userPopPlaylistId = this.user.getUserPlaylistIds().get(1);
        int row = sarkilarTablo.getSelectedRow();
        int songId = Integer.parseInt(sarkilarTablo.getModel().getValueAt(row, 0).toString());
        if (sarkilarTablo.getModel().getValueAt(row, 4).toString().equals("Jazz")) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
                System.out.println("Veritabanına Bağlandı.");

                String query = "INSERT INTO playlistsongs(playlistId,songId) "
                        + "VALUES('" + userPopPlaylistId + "','" + songId + "')";

                Statement ifade = conn.createStatement();
                ifade.execute(query);

            } catch (SQLException | ClassNotFoundException e) {
                System.out.println("Veritabanına Bağlanamadı." + e);

            }
        } else {
            System.out.println("Müzik türü ile playlist türü eşleşmelidir.");
        }

    }//GEN-LAST:event_jazzActionPerformed

    private void klasikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_klasikActionPerformed
        int userPopPlaylistId = this.user.getUserPlaylistIds().get(2);
        int row = sarkilarTablo.getSelectedRow();
        int songId = Integer.parseInt(sarkilarTablo.getModel().getValueAt(row, 0).toString());
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "INSERT INTO playlistsongs(playlistId,songId) "
                    + "VALUES('" + userPopPlaylistId + "','" + songId + "')";

            Statement ifade = conn.createStatement();
            ifade.execute(query);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
    }//GEN-LAST:event_klasikActionPerformed

    private void panelJazzListesiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelJazzListesiMouseClicked
        tablolar.setVisible(true);
        tablolar.setSelectedIndex(2);
        DefaultTableModel model = new DefaultTableModel(new String[]{"#", "Şarkı Adı", "Sanatçı", "Albüm", "Tür", "Tarih", "Süre"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "SELECT sarkilar.sarkiId, sarkilar.sarkiAdi, sanatcilar.sanatciAdi,  albumler.albumAdi,sarkilar.sarkiTur,sarkilar.sarkiTarih ,sarkilar.sarkiSure "
                    + "FROM sarkilar,albumler,sanatcilar "
                    + "WHERE sarkilar.albumId = albumler.albumId && sarkilar.sarkiciId = sanatcilar.sanatciId && sarkilar.sarkiId IN(SELECT playlistsongs.songId "
                    + "FROM playlists,playlistsongs "
                    + "WHERE playlists.playlistId = playlistsongs.playlistId && playlists.playlistOwnerId =" + this.user.getUserId() + " && playlists.playlistId = " + this.user.getUserPlaylistIds().get(1) + ")";

            Statement ifade = conn.createStatement();
            ResultSet rs = ifade.executeQuery(query);
            while (rs.next()) {
                String q = rs.getString("sarkilar.sarkiId");
                String a = rs.getString("sarkilar.sarkiAdi");
                String b = rs.getString("sanatcilar.sanatciAdi");
                String c = rs.getString("albumler.albumAdi");
                String c2 = rs.getString("sarkilar.sarkiTur");
                String d = rs.getString("sarkilar.sarkiTarih");
                String e = rs.getString("sarkilar.sarkiSure");

                model.addRow(new Object[]{q, a, b, c, c2, d, e});

            }
            kullaniciJazzTablo.setModel(model);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);
        }
    }//GEN-LAST:event_panelJazzListesiMouseClicked

    private void panelKlasikListesiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelKlasikListesiMouseClicked
        tablolar.setVisible(true);
        tablolar.setSelectedIndex(3);
        DefaultTableModel model = new DefaultTableModel(new String[]{"#", "Şarkı Adı", "Sanatçı", "Albüm", "Tür", "Tarih", "Süre"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "SELECT sarkilar.sarkiId, sarkilar.sarkiAdi, sanatcilar.sanatciAdi,  albumler.albumAdi,sarkilar.sarkiTur,sarkilar.sarkiTarih ,sarkilar.sarkiSure "
                    + "FROM sarkilar,albumler,sanatcilar "
                    + "WHERE sarkilar.albumId = albumler.albumId && sarkilar.sarkiciId = sanatcilar.sanatciId && sarkilar.sarkiId IN(SELECT playlistsongs.songId "
                    + "FROM playlists,playlistsongs "
                    + "WHERE playlists.playlistId = playlistsongs.playlistId && playlists.playlistOwnerId =" + this.user.getUserId() + " && playlists.playlistId = " + this.user.getUserPlaylistIds().get(2) + ")";

            Statement ifade = conn.createStatement();
            ResultSet rs = ifade.executeQuery(query);
            while (rs.next()) {
                String q = rs.getString("sarkilar.sarkiId");
                String a = rs.getString("sarkilar.sarkiAdi");
                String b = rs.getString("sanatcilar.sanatciAdi");
                String c = rs.getString("albumler.albumAdi");
                String c2 = rs.getString("sarkilar.sarkiTur");
                String d = rs.getString("sarkilar.sarkiTarih");
                String e = rs.getString("sarkilar.sarkiSure");

                model.addRow(new Object[]{q, a, b, c, c2, d, e});

            }
            kullaniciKlasikTablo.setModel(model);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);
        }
    }//GEN-LAST:event_panelKlasikListesiMouseClicked

    private void takipEdilebilirKullanicilarTabloMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_takipEdilebilirKullanicilarTabloMouseReleased
        if (evt.getButton() == MouseEvent.BUTTON3) {
            if (evt.isPopupTrigger() && takipEdilebilirKullanicilarTablo.getSelectedRowCount() != 0) {
                popUpMenu2.show(evt.getComponent(), evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_takipEdilebilirKullanicilarTabloMouseReleased

    private void takipEdilebilirKullaniciMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_takipEdilebilirKullaniciMouseClicked
        tablolar.setVisible(true);
        tablolar.setSelectedIndex(4);
        DefaultTableModel model = new DefaultTableModel(new String[]{"Kullanıcı ID", "Kullanıcı Adı"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "SELECT kullanicilar.kullaniciId, kullanicilar.kullaniciAdi FROM kullanicilar WHERE kullaniciTipi='Premium' && kullaniciId !=" + this.user.getUserId();
            Statement ifade = conn.createStatement();
            ResultSet rs = ifade.executeQuery(query);
            while (rs.next()) {
                String a = rs.getString("kullanicilar.kullaniciId");
                String b = rs.getString("kullanicilar.kullaniciAdi");

                model.addRow(new Object[]{a, b});

            }
            takipEdilebilirKullanicilarTablo.setModel(model);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
    }//GEN-LAST:event_takipEdilebilirKullaniciMouseClicked

    private void premiumButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_premiumButtonActionPerformed
        this.user.setPayChecked(true);
        this.user.setUserType("Premium");
        premiumButton.setEnabled(false);
        premiumButton.setText("Hoşgeldin " + this.user.getUserName());
        hesapLabel.setText("Hesap Türü: Premium");

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "UPDATE kullanicilar SET kullaniciOdemeKontrolu=1, kullaniciTipi='Premium' "
                    + "WHERE kullanicilar.kullaniciId =" + this.user.getUserId() + "";

            Statement ifade = conn.createStatement();
            ifade.execute(query);
            JOptionPane.showMessageDialog(null, "Hesabınız yükseltildi. Lütfen tekrar giriş yapınız.");
            System.exit(0);
        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }


    }//GEN-LAST:event_premiumButtonActionPerformed

    private void takipEdilenKullanicilarTabloMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_takipEdilenKullanicilarTabloMouseReleased
        if (evt.getButton() == MouseEvent.BUTTON3) {
            if (evt.isPopupTrigger() && takipEdilenKullanicilarTablo.getSelectedRowCount() != 0) {
                popUpMenu6.show(evt.getComponent(), evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_takipEdilenKullanicilarTabloMouseReleased

    public void takipEdilenKullaniciTablosuGuncelle() {
        tablolar.setSelectedIndex(5);
        DefaultTableModel model = new DefaultTableModel(new String[]{"Kullanıcı Id", "Kullanıcı Adı"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "SELECT kullanicilar.kullaniciId, kullanicilar.kullaniciAdi "
                    + "FROM kullanicilar "
                    + "WHERE kullanicilar.kullaniciId IN(SELECT following_Id "
                    + "FROM following "
                    + "WHERE following.follower_Id ='" + this.user.getUserId() + "')";

            Statement ifade = conn.createStatement();
            ResultSet rs = ifade.executeQuery(query);
            while (rs.next()) {
                String a = rs.getString("kullanicilar.kullaniciId");
                String b = rs.getString("kullanicilar.kullaniciAdi");

                model.addRow(new Object[]{a, b});

            }
            takipEdilenKullanicilarTablo.setModel(model);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
    }

    public void takipEdilebilirKullaniciTablosuGuncelle() {
        tablolar.setSelectedIndex(4);
        DefaultTableModel model = new DefaultTableModel(new String[]{"Kullanıcı ID", "Kullanıcı Adı"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "SELECT kullanicilar.kullaniciId, kullanicilar.kullaniciAdi FROM kullanicilar WHERE kullaniciTipi='Premium' && kullaniciId !=" + this.user.getUserId();

            Statement ifade = conn.createStatement();
            ResultSet rs = ifade.executeQuery(query);
            while (rs.next()) {
                String a = rs.getString("kullanicilar.kullaniciId");
                String b = rs.getString("kullanicilar.kullaniciAdi");

                model.addRow(new Object[]{a, b});

            }
            takipEdilebilirKullanicilarTablo.setModel(model);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }

    }

    private void takipEtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_takipEtActionPerformed
        int userPopPlaylistId = this.user.getUserPlaylistIds().get(0);
        int row = takipEdilebilirKullanicilarTablo.getSelectedRow();
        int takipedilecekId = Integer.parseInt(takipEdilebilirKullanicilarTablo.getModel().getValueAt(row, 0).toString());

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "INSERT INTO following(follower_Id,following_Id) "
                    + "VALUES('" + this.user.getUserId() + "','" + takipedilecekId + "')";

            Statement ifade = conn.createStatement();
            ifade.execute(query);
            takipEdilebilirKullaniciTablosuGuncelle();

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }

    }//GEN-LAST:event_takipEtActionPerformed

    private void takipEttiklerinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_takipEttiklerinMouseClicked
        tablolar.setVisible(true);
        tablolar.setSelectedIndex(5);
        DefaultTableModel model = new DefaultTableModel(new String[]{"Kullanıcı Id", "Kullanıcı Adı"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "SELECT kullanicilar.kullaniciId, kullanicilar.kullaniciAdi "
                    + "FROM kullanicilar "
                    + "WHERE kullanicilar.kullaniciId IN(SELECT following_Id "
                    + "FROM following "
                    + "WHERE following.follower_Id ='" + this.user.getUserId() + "')";

            Statement ifade = conn.createStatement();
            ResultSet rs = ifade.executeQuery(query);
            while (rs.next()) {
                String a = rs.getString("kullanicilar.kullaniciId");
                String b = rs.getString("kullanicilar.kullaniciAdi");

                model.addRow(new Object[]{a, b});

            }
            takipEdilenKullanicilarTablo.setModel(model);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
    }//GEN-LAST:event_takipEttiklerinMouseClicked

    private void kullaniciPopTabloMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kullaniciPopTabloMouseReleased
        if (evt.getButton() == MouseEvent.BUTTON3) {
            if (evt.isPopupTrigger() && kullaniciPopTablo.getSelectedRowCount() != 0) {
                popUpMenu3.show(evt.getComponent(), evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_kullaniciPopTabloMouseReleased

    private void listedenCikartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listedenCikartActionPerformed
        int userPopPlaylistId = this.user.getUserPlaylistIds().get(0);
        int row = kullaniciPopTablo.getSelectedRow();
        int songId = Integer.parseInt(kullaniciPopTablo.getModel().getValueAt(row, 0).toString());

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "DELETE FROM playlistsongs WHERE playlistsongs.playlistId =" + userPopPlaylistId
                    + " && playlistsongs.songId =" + songId + "";

            Statement ifade = conn.createStatement();
            ifade.execute(query);
            kullaniciPopTablosuGuncelle();

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }

    }//GEN-LAST:event_listedenCikartActionPerformed

    private void kullaniciJazzTabloMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kullaniciJazzTabloMouseReleased
        if (evt.getButton() == MouseEvent.BUTTON3) {
            if (evt.isPopupTrigger() && kullaniciJazzTablo.getSelectedRowCount() != 0) {
                popUpMenu4.show(evt.getComponent(), evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_kullaniciJazzTabloMouseReleased

    public void kullaniciJazzTablosuGuncelle() {
        DefaultTableModel model = new DefaultTableModel(new String[]{"#", "Şarkı Adı", "Sanatçı", "Albüm", "Tür", "Tarih", "Süre"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "SELECT sarkilar.sarkiId, sarkilar.sarkiAdi, sanatcilar.sanatciAdi,  albumler.albumAdi,sarkilar.sarkiTur,sarkilar.sarkiTarih ,sarkilar.sarkiSure "
                    + "FROM sarkilar,albumler,sanatcilar "
                    + "WHERE sarkilar.albumId = albumler.albumId && sarkilar.sarkiciId = sanatcilar.sanatciId && sarkilar.sarkiId IN(SELECT playlistsongs.songId "
                    + "FROM playlists,playlistsongs "
                    + "WHERE playlists.playlistId = playlistsongs.playlistId && playlists.playlistOwnerId =" + this.user.getUserId() + " && playlists.playlistId = " + this.user.getUserPlaylistIds().get(1) + ")";

            Statement ifade = conn.createStatement();
            ResultSet rs = ifade.executeQuery(query);
            while (rs.next()) {
                String q = rs.getString("sarkilar.sarkiId");
                String a = rs.getString("sarkilar.sarkiAdi");
                String b = rs.getString("sanatcilar.sanatciAdi");
                String c = rs.getString("albumler.albumAdi");
                String c2 = rs.getString("sarkilar.sarkiTur");
                String d = rs.getString("sarkilar.sarkiTarih");
                String e = rs.getString("sarkilar.sarkiSure");

                model.addRow(new Object[]{q, a, b, c, c2, d, e});

            }
            kullaniciJazzTablo.setModel(model);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);
        }

    }
    private void listedenCikart2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listedenCikart2ActionPerformed
        int userPopPlaylistId = this.user.getUserPlaylistIds().get(1);
        int row = kullaniciJazzTablo.getSelectedRow();
        int songId = Integer.parseInt(kullaniciJazzTablo.getModel().getValueAt(row, 0).toString());

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "DELETE FROM playlistsongs WHERE playlistsongs.playlistId =" + userPopPlaylistId
                    + " && playlistsongs.songId =" + songId + "";

            Statement ifade = conn.createStatement();
            ifade.execute(query);
            kullaniciJazzTablosuGuncelle();

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
     }//GEN-LAST:event_listedenCikart2ActionPerformed

    public void kullaniciKlasikTablosuGuncelle() {
        DefaultTableModel model = new DefaultTableModel(new String[]{"#", "Şarkı Adı", "Sanatçı", "Albüm", "Tür", "Tarih", "Süre"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "SELECT sarkilar.sarkiId, sarkilar.sarkiAdi, sanatcilar.sanatciAdi,  albumler.albumAdi,sarkilar.sarkiTur,sarkilar.sarkiTarih ,sarkilar.sarkiSure "
                    + "FROM sarkilar,albumler,sanatcilar "
                    + "WHERE sarkilar.albumId = albumler.albumId && sarkilar.sarkiciId = sanatcilar.sanatciId && sarkilar.sarkiId IN(SELECT playlistsongs.songId "
                    + "FROM playlists,playlistsongs "
                    + "WHERE playlists.playlistId = playlistsongs.playlistId && playlists.playlistOwnerId =" + this.user.getUserId() + " && playlists.playlistId = " + this.user.getUserPlaylistIds().get(2) + ")";

            Statement ifade = conn.createStatement();
            ResultSet rs = ifade.executeQuery(query);
            while (rs.next()) {
                String q = rs.getString("sarkilar.sarkiId");
                String a = rs.getString("sarkilar.sarkiAdi");
                String b = rs.getString("sanatcilar.sanatciAdi");
                String c = rs.getString("albumler.albumAdi");
                String c2 = rs.getString("sarkilar.sarkiTur");
                String d = rs.getString("sarkilar.sarkiTarih");
                String e = rs.getString("sarkilar.sarkiSure");

                model.addRow(new Object[]{q, a, b, c, c2, d, e});

            }
            kullaniciKlasikTablo.setModel(model);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);
        }

    }

    private void listedenCikart3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listedenCikart3ActionPerformed
        int userPopPlaylistId = this.user.getUserPlaylistIds().get(2);
        int row = kullaniciKlasikTablo.getSelectedRow();
        int songId = Integer.parseInt(kullaniciKlasikTablo.getModel().getValueAt(row, 0).toString());

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "DELETE FROM playlistsongs WHERE playlistsongs.playlistId =" + userPopPlaylistId
                    + " && playlistsongs.songId =" + songId + "";

            Statement ifade = conn.createStatement();
            ifade.execute(query);
            kullaniciKlasikTablosuGuncelle();

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
    }//GEN-LAST:event_listedenCikart3ActionPerformed

    private void kullaniciKlasikTabloMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kullaniciKlasikTabloMouseReleased
        if (evt.getButton() == MouseEvent.BUTTON3) {
            if (evt.isPopupTrigger() && kullaniciKlasikTablo.getSelectedRowCount() != 0) {
                popUpMenu5.show(evt.getComponent(), evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_kullaniciKlasikTabloMouseReleased

    private void takiptenCikartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_takiptenCikartActionPerformed
        int row = takipEdilenKullanicilarTablo.getSelectedRow();
        int userFollowingId = Integer.parseInt(takipEdilenKullanicilarTablo.getModel().getValueAt(row, 0).toString());

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "DELETE FROM following WHERE follower_Id =" + this.user.getUserId()
                    + " && following_Id =" + userFollowingId + "";

            Statement ifade = conn.createStatement();
            ifade.execute(query);
            takipEdilenKullaniciTablosuGuncelle();

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
    }//GEN-LAST:event_takiptenCikartActionPerformed

    private void listeGoruntuleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listeGoruntuleActionPerformed
        takipUser xd = new takipUser();

        int row = takipEdilenKullanicilarTablo.getSelectedRow();
        int takipEdilenId = Integer.parseInt(takipEdilenKullanicilarTablo.getModel().getValueAt(row, 0).toString());
        User tempUser = new User(takipEdilenId, takipEdilenKullanicilarTablo.getModel().getValueAt(row, 1).toString(), "Premium", true);
        xd.setUser(this.user);
        xd.setTakipUserPlaylistIds(tempUser.getUserPlaylistIds());
        xd.setTakipUserId(takipEdilenId);
        xd.setTakipUserName(tempUser.getUserName());
        xd.show();

    }//GEN-LAST:event_listeGoruntuleActionPerformed

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        tablolar.setSelectedIndex(7);
    }//GEN-LAST:event_jPanel2MouseClicked

    private void calActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calActionPerformed
        int row = sarkilarTablo.getSelectedRow();
        String listeningSongArtistName = sarkilarTablo.getModel().getValueAt(row, 1).toString();
        String listeningSongName = sarkilarTablo.getModel().getValueAt(row, 2).toString();
        String listeningSongAlbumName = sarkilarTablo.getModel().getValueAt(row, 3).toString();
        int songId = Integer.parseInt(sarkilarTablo.getModel().getValueAt(row, 0).toString());

        calinanSarkiLabel.setText("Şu anda çalan şarkı: " + listeningSongArtistName + " - " + listeningSongName);

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "UPDATE sarkilar SET sarkiDinlenmeSayisi = sarkiDinlenmeSayisi + 1 WHERE sarkiId =" + songId;

            Statement ifade = conn.createStatement();
            ifade.execute(query);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }

    }//GEN-LAST:event_calActionPerformed

    private void cal2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cal2ActionPerformed
        int row = kullaniciPopTablo.getSelectedRow();
        String listeningSongArtistName = kullaniciPopTablo.getModel().getValueAt(row, 1).toString();
        String listeningSongName = kullaniciPopTablo.getModel().getValueAt(row, 2).toString();
        int songId = Integer.parseInt(kullaniciPopTablo.getModel().getValueAt(row, 0).toString());

        calinanSarkiLabel.setText("Şu anda çalan şarkı: " + listeningSongArtistName + " - " + listeningSongName);

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "UPDATE sarkilar SET sarkiDinlenmeSayisi = sarkiDinlenmeSayisi + 1 WHERE sarkiId =" + songId;

            Statement ifade = conn.createStatement();
            ifade.execute(query);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
    }//GEN-LAST:event_cal2ActionPerformed

    private void cal3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cal3ActionPerformed
        int row = kullaniciJazzTablo.getSelectedRow();
        String listeningSongArtistName = kullaniciJazzTablo.getModel().getValueAt(row, 1).toString();
        String listeningSongName = kullaniciJazzTablo.getModel().getValueAt(row, 2).toString();
        int songId = Integer.parseInt(kullaniciJazzTablo.getModel().getValueAt(row, 0).toString());

        calinanSarkiLabel.setText("Şu anda çalan şarkı: " + listeningSongArtistName + " - " + listeningSongName);

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "UPDATE sarkilar SET sarkiDinlenmeSayisi = sarkiDinlenmeSayisi + 1 WHERE sarkiId =" + songId;

            Statement ifade = conn.createStatement();
            ifade.execute(query);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
    }//GEN-LAST:event_cal3ActionPerformed

    private void cal4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cal4ActionPerformed
        int row = kullaniciKlasikTablo.getSelectedRow();
        String listeningSongArtistName = kullaniciKlasikTablo.getModel().getValueAt(row, 1).toString();
        String listeningSongName = kullaniciKlasikTablo.getModel().getValueAt(row, 2).toString();
        int songId = Integer.parseInt(kullaniciKlasikTablo.getModel().getValueAt(row, 0).toString());

        calinanSarkiLabel.setText("Şu anda çalan şarkı: " + listeningSongArtistName + " - " + listeningSongName);

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "UPDATE sarkilar SET sarkiDinlenmeSayisi = sarkiDinlenmeSayisi + 1 WHERE sarkiId =" + songId;

            Statement ifade = conn.createStatement();
            ifade.execute(query);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
    }//GEN-LAST:event_cal4ActionPerformed

    private void top10sarkiTabloMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_top10sarkiTabloMouseReleased
        if (evt.getButton() == MouseEvent.BUTTON3) {
            if (evt.isPopupTrigger() && top10sarkiTablo.getSelectedRowCount() != 0) {
                popUpMenu7.show(evt.getComponent(), evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_top10sarkiTabloMouseReleased

    private void genelTop10ButonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_genelTop10ButonMouseClicked

        tablolar.setVisible(true);
        tablolar.setSelectedIndex(6);
        DefaultTableModel model = new DefaultTableModel(new String[]{"#", "Şarkı Adı", "Sanatçı", "Albüm", "Tür", "Tarih", "Süre", "Dinlenme Sayısı"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "SELECT sarkilar.sarkiId,sarkilar.sarkiAdi,sarkilar.sarkiTarih,albumler.albumAdi,"
                    + "sanatcilar.sanatciAdi,sarkilar.sarkiTur,sarkilar.sarkiSure,sarkilar.sarkiDinlenmeSayisi "
                    + "FROM sarkilar,albumler,sanatcilar "
                    + "WHERE sarkilar.albumId = albumler.albumId && sarkilar.sarkiciId = sanatcilar.sanatciId "
                    + "ORDER BY sarkiDinlenmeSayisi DESC LIMIT 10";

            Statement ifade = conn.createStatement();
            ResultSet rs = ifade.executeQuery(query);
            while (rs.next()) {
                String q = rs.getString("sarkilar.sarkiId");
                String a = rs.getString("sarkilar.sarkiAdi");
                String b = rs.getString("sanatcilar.sanatciAdi");
                String c = rs.getString("albumler.albumAdi");
                String c2 = rs.getString("sarkilar.sarkiTur");
                String d = rs.getString("sarkilar.sarkiTarih");
                String e = rs.getString("sarkilar.sarkiSure");
                String f = rs.getString("sarkilar.sarkiDinlenmeSayisi");

                model.addRow(new Object[]{q, a, b, c, c2, d, e, f});

            }
            top10sarkiTablo.setModel(model);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);
        }
    }//GEN-LAST:event_genelTop10ButonMouseClicked

    private void poptop10sarkiButonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_poptop10sarkiButonMouseClicked
        tablolar.setVisible(true);
        tablolar.setSelectedIndex(6);
        DefaultTableModel model = new DefaultTableModel(new String[]{"#", "Şarkı Adı", "Sanatçı", "Albüm", "Tür", "Tarih", "Süre", "Dinlenme Sayısı"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "SELECT sarkilar.sarkiId,sarkilar.sarkiAdi,sarkilar.sarkiTarih,albumler.albumAdi,"
                    + "sanatcilar.sanatciAdi,sarkilar.sarkiTur,sarkilar.sarkiSure,sarkilar.sarkiDinlenmeSayisi "
                    + "FROM sarkilar,albumler,sanatcilar "
                    + "WHERE sarkilar.albumId = albumler.albumId && sarkilar.sarkiciId = sanatcilar.sanatciId && sarkilar.sarkiTur='Pop' "
                    + "ORDER BY sarkiDinlenmeSayisi DESC LIMIT 10";

            Statement ifade = conn.createStatement();
            ResultSet rs = ifade.executeQuery(query);
            while (rs.next()) {
                String q = rs.getString("sarkilar.sarkiId");
                String a = rs.getString("sarkilar.sarkiAdi");
                String b = rs.getString("sanatcilar.sanatciAdi");
                String c = rs.getString("albumler.albumAdi");
                String c2 = rs.getString("sarkilar.sarkiTur");
                String d = rs.getString("sarkilar.sarkiTarih");
                String e = rs.getString("sarkilar.sarkiSure");
                String f = rs.getString("sarkilar.sarkiDinlenmeSayisi");

                model.addRow(new Object[]{q, a, b, c, c2, d, e, f});

            }
            top10sarkiTablo.setModel(model);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);
        }
    }//GEN-LAST:event_poptop10sarkiButonMouseClicked

    private void jazztop10sarkiButonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jazztop10sarkiButonMouseClicked
        tablolar.setVisible(true);
        tablolar.setSelectedIndex(6);
        DefaultTableModel model = new DefaultTableModel(new String[]{"#", "Şarkı Adı", "Sanatçı", "Albüm", "Tür", "Tarih", "Süre", "Dinlenme Sayısı"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "SELECT sarkilar.sarkiId,sarkilar.sarkiAdi,sarkilar.sarkiTarih,albumler.albumAdi,"
                    + "sanatcilar.sanatciAdi,sarkilar.sarkiTur,sarkilar.sarkiSure,sarkilar.sarkiDinlenmeSayisi "
                    + "FROM sarkilar,albumler,sanatcilar "
                    + "WHERE sarkilar.albumId = albumler.albumId && sarkilar.sarkiciId = sanatcilar.sanatciId && sarkilar.sarkiTur='Jazz' "
                    + "ORDER BY sarkiDinlenmeSayisi DESC LIMIT 10";

            Statement ifade = conn.createStatement();
            ResultSet rs = ifade.executeQuery(query);
            while (rs.next()) {
                String q = rs.getString("sarkilar.sarkiId");
                String a = rs.getString("sarkilar.sarkiAdi");
                String b = rs.getString("sanatcilar.sanatciAdi");
                String c = rs.getString("albumler.albumAdi");
                String c2 = rs.getString("sarkilar.sarkiTur");
                String d = rs.getString("sarkilar.sarkiTarih");
                String e = rs.getString("sarkilar.sarkiSure");
                String f = rs.getString("sarkilar.sarkiDinlenmeSayisi");

                model.addRow(new Object[]{q, a, b, c, c2, d, e, f});

            }
            top10sarkiTablo.setModel(model);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);
        }
    }//GEN-LAST:event_jazztop10sarkiButonMouseClicked

    private void klasiktop10sarkiButonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_klasiktop10sarkiButonMouseClicked
        tablolar.setVisible(true);
        tablolar.setSelectedIndex(6);
        DefaultTableModel model = new DefaultTableModel(new String[]{"#", "Şarkı Adı", "Sanatçı", "Albüm", "Tür", "Tarih", "Süre", "Dinlenme Sayısı"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "SELECT sarkilar.sarkiId,sarkilar.sarkiAdi,sarkilar.sarkiTarih,albumler.albumAdi,"
                    + "sanatcilar.sanatciAdi,sarkilar.sarkiTur,sarkilar.sarkiSure,sarkilar.sarkiDinlenmeSayisi "
                    + "FROM sarkilar,albumler,sanatcilar "
                    + "WHERE sarkilar.albumId = albumler.albumId && sarkilar.sarkiciId = sanatcilar.sanatciId && sarkilar.sarkiTur='Klasik' "
                    + "ORDER BY sarkiDinlenmeSayisi DESC LIMIT 10";

            Statement ifade = conn.createStatement();
            ResultSet rs = ifade.executeQuery(query);
            while (rs.next()) {
                String q = rs.getString("sarkilar.sarkiId");
                String a = rs.getString("sarkilar.sarkiAdi");
                String b = rs.getString("sanatcilar.sanatciAdi");
                String c = rs.getString("albumler.albumAdi");
                String c2 = rs.getString("sarkilar.sarkiTur");
                String d = rs.getString("sarkilar.sarkiTarih");
                String e = rs.getString("sarkilar.sarkiSure");
                String f = rs.getString("sarkilar.sarkiDinlenmeSayisi");

                model.addRow(new Object[]{q, a, b, c, c2, d, e, f});

            }
            top10sarkiTablo.setModel(model);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);
        }
    }//GEN-LAST:event_klasiktop10sarkiButonMouseClicked

    private void calTop10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calTop10ActionPerformed
        int row = top10sarkiTablo.getSelectedRow();
        String listeningSongArtistName = top10sarkiTablo.getModel().getValueAt(row, 2).toString();
        String listeningSongName = top10sarkiTablo.getModel().getValueAt(row, 1).toString();
        String listeningSongAlbumName = top10sarkiTablo.getModel().getValueAt(row, 3).toString();
        int songId = Integer.parseInt(top10sarkiTablo.getModel().getValueAt(row, 0).toString());

        calinanSarkiLabel.setText("Şu anda çalan şarkı: " + listeningSongArtistName + " - " + listeningSongName);

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "UPDATE sarkilar SET sarkiDinlenmeSayisi = sarkiDinlenmeSayisi + 1 WHERE sarkiId =" + songId;

            Statement ifade = conn.createStatement();
            ifade.execute(query);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
    }//GEN-LAST:event_calTop10ActionPerformed

    private void pop1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pop1ActionPerformed
        int userPopPlaylistId = this.user.getUserPlaylistIds().get(0);
        int row = top10sarkiTablo.getSelectedRow();
        int songId = Integer.parseInt(top10sarkiTablo.getModel().getValueAt(row, 0).toString());
        if (top10sarkiTablo.getModel().getValueAt(row, 4).toString().equals("Pop")) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
                System.out.println("Veritabanına Bağlandı.");

                String query = "INSERT INTO playlistsongs(playlistId,songId) "
                        + "VALUES('" + userPopPlaylistId + "','" + songId + "')";

                Statement ifade = conn.createStatement();
                ifade.execute(query);
                kullaniciPopTablosuGuncelle();

            } catch (SQLException | ClassNotFoundException e) {
                System.out.println("Veritabanına Bağlanamadı." + e);

            }
        } else {
            System.out.println("Müzik türü ile playlist türü aynı olmalı");
        }
    }//GEN-LAST:event_pop1ActionPerformed

    private void jazz1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jazz1ActionPerformed
        int userJazzPlaylistId = this.user.getUserPlaylistIds().get(1);
        int row = top10sarkiTablo.getSelectedRow();
        int songId = Integer.parseInt(top10sarkiTablo.getModel().getValueAt(row, 0).toString());
        if (top10sarkiTablo.getModel().getValueAt(row, 4).toString().equals("Jazz")) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
                System.out.println("Veritabanına Bağlandı.");

                String query = "INSERT INTO playlistsongs(playlistId,songId) "
                        + "VALUES('" + userJazzPlaylistId + "','" + songId + "')";

                Statement ifade = conn.createStatement();
                ifade.execute(query);
                kullaniciPopTablosuGuncelle();

            } catch (SQLException | ClassNotFoundException e) {
                System.out.println("Veritabanına Bağlanamadı." + e);

            }
        } else {
            System.out.println("Müzik türü ile playlist türü aynı olmalı");
        }
    }//GEN-LAST:event_jazz1ActionPerformed

    private void klasik1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_klasik1ActionPerformed
        int userJazzPlaylistId = this.user.getUserPlaylistIds().get(2);
        int row = top10sarkiTablo.getSelectedRow();
        int songId = Integer.parseInt(top10sarkiTablo.getModel().getValueAt(row, 0).toString());
        if (top10sarkiTablo.getModel().getValueAt(row, 4).toString().equals("Klasik")) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
                System.out.println("Veritabanına Bağlandı.");

                String query = "INSERT INTO playlistsongs(playlistId,songId) "
                        + "VALUES('" + userJazzPlaylistId + "','" + songId + "')";

                Statement ifade = conn.createStatement();
                ifade.execute(query);
                kullaniciPopTablosuGuncelle();

            } catch (SQLException | ClassNotFoundException e) {
                System.out.println("Veritabanına Bağlanamadı." + e);

            }
        } else {
            System.out.println("Müzik türü ile playlist türü aynı olmalı");
        }
    }//GEN-LAST:event_klasik1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel anaSayfa;
    private javax.swing.JMenuItem cal;
    private javax.swing.JMenuItem cal2;
    private javax.swing.JMenuItem cal3;
    private javax.swing.JMenuItem cal4;
    private javax.swing.JMenuItem calTop10;
    private javax.swing.JLabel calinanSarkiLabel;
    private javax.swing.JMenu calmaListesineEkle;
    private javax.swing.JMenu calmaListesineEkle1;
    private javax.swing.JButton genelTop10Buton;
    private javax.swing.JLabel hesapLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JMenuItem jazz;
    private javax.swing.JMenuItem jazz1;
    private javax.swing.JButton jazztop10sarkiButon;
    private javax.swing.JMenuItem klasik;
    private javax.swing.JMenuItem klasik1;
    private javax.swing.JButton klasiktop10sarkiButon;
    private javax.swing.JPanel kullaniciJazzListesi;
    private javax.swing.JTable kullaniciJazzTablo;
    private javax.swing.JPanel kullaniciKlasikListesi;
    private javax.swing.JTable kullaniciKlasikTablo;
    private javax.swing.JPanel kullaniciListePanel;
    private javax.swing.JPanel kullaniciPopListesi;
    private javax.swing.JTable kullaniciPopTablo;
    private javax.swing.JMenuItem listeGoruntule;
    private javax.swing.JMenuItem listedenCikart;
    private javax.swing.JMenuItem listedenCikart2;
    private javax.swing.JMenuItem listedenCikart3;
    private javax.swing.JPanel panelJazzListesi;
    private javax.swing.JPanel panelKlasikListesi;
    private javax.swing.JPanel panelPopListesi;
    private javax.swing.JMenuItem pop;
    private javax.swing.JMenuItem pop1;
    private javax.swing.JPopupMenu popUpMenu;
    private javax.swing.JPopupMenu popUpMenu2;
    private javax.swing.JPopupMenu popUpMenu3;
    private javax.swing.JPopupMenu popUpMenu4;
    private javax.swing.JPopupMenu popUpMenu5;
    private javax.swing.JPopupMenu popUpMenu6;
    private javax.swing.JPopupMenu popUpMenu7;
    private javax.swing.JButton poptop10sarkiButon;
    private javax.swing.JButton premiumButton;
    private javax.swing.JPanel sarkilarButon;
    private javax.swing.JPanel sarkilarPanel;
    private javax.swing.JTable sarkilarTablo;
    private javax.swing.JTabbedPane tablolar;
    private javax.swing.JPanel takipEdilebilirKullanici;
    private javax.swing.JTable takipEdilebilirKullanicilarTablo;
    private javax.swing.JTable takipEdilenKullanicilarTablo;
    private javax.swing.JMenuItem takipEt;
    private javax.swing.JPanel takipEttiginKullanicilar;
    private javax.swing.JScrollPane takipEttiginKullanicilarTablo;
    private javax.swing.JPanel takipEttiklerin;
    private javax.swing.JMenuItem takiptenCikart;
    private javax.swing.JPanel top10sarkiPanel;
    private javax.swing.JTable top10sarkiTablo;
    private javax.swing.JPanel topPanel;
    // End of variables declaration//GEN-END:variables
}
