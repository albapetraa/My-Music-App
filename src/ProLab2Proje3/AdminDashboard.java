/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ProLab2Proje3;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hp
 */
public class AdminDashboard extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
    public AdminDashboard() {
        initComponents();
        String[] x = getAllCountries();
        for (String q : x) {
            sanatciUlkeComboBox.addItem(q);
        }
        sanatciUlkeComboBox.setSelectedIndex(-1);
        jTabbedPane1.setSelectedIndex(-1);
        albumDegiskenleriYukle();
        sarkilarDegiskenleriYukle();
        albumTurComboBox.addItem("Pop");
        albumTurComboBox.addItem("Jazz");
        albumTurComboBox.addItem("Klasik");
        sarkilarSarkiTurComboBox.addItem("Pop");
        sarkilarSarkiTurComboBox.addItem("Jazz");
        sarkilarSarkiTurComboBox.addItem("Klasik");
    }

    public void sarkilarDegiskenleriYukle() {
        albumIds.clear();
        sarkilarSanatciComboBox.removeAllItems();
        sarkilarAlbumComboBox.removeAllItems();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "SELECT DISTINCT sanatcilar.sanatciAdi, sanatcilar.sanatciId "
                    + "FROM sarkilar,sanatcilar "
                    + "WHERE 1";
            Statement ifade = conn.createStatement();
            ResultSet rs = ifade.executeQuery(query);
            while (rs.next()) {
                int a = rs.getInt("sanatcilar.sanatciId");
                String b = rs.getString("sanatcilar.sanatciAdi");

                sarkilarSanatciComboBox.addItem(b);
            }
            String query2 = "SELECT albumler.albumAdi, albumler.albumId "
                    + "FROM albumler "
                    + "WHERE 1 ORDER BY `albumler`.`albumId` ASC";
            Statement ifade2 = conn.createStatement();
            ResultSet rs2 = ifade2.executeQuery(query2);
            while (rs2.next()) {
                albumIds.add(Integer.parseInt(rs2.getString("albumler.albumId")));
                String b = rs2.getString("albumler.albumAdi");
                sarkilarAlbumComboBox.addItem(b);
            }

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }

    }

    public void albumDegiskenleriYukle() {
        artistIds.clear();
        albumSanatciComboBox.removeAllItems();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query2 = "SELECT * FROM sanatcilar WHERE 1";
            Statement ifade2 = conn.createStatement();
            ResultSet rs2 = ifade2.executeQuery(query2);
            while (rs2.next()) {
                int a = rs2.getInt("sanatciId");
                String b = rs2.getString("sanatciAdi");
                albumSanatciComboBox.addItem(b);
                artistIds.add(a);
            }

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
    }

    public String[] getAllCountries() {
        String[] countries = new String[Locale.getISOCountries().length];
        String[] countryCodes = Locale.getISOCountries();
        for (int i = 0; i < countryCodes.length; i++) {
            Locale obj = new Locale("", countryCodes[i]);
            countries[i] = obj.getDisplayCountry();
        }
        return countries;
    }

    public int indexBul(String q) {
        String[] x = getAllCountries();
        int asd = 0;
        for (int i = 0; i < x.length; i++) {
            String string = x[i];
            if (string.equals(q)) {
                asd = i;
            }
        }
        return asd;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        sidePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        sanatciButon = new javax.swing.JButton();
        albumButon = new javax.swing.JButton();
        sarkiButon = new javax.swing.JButton();
        kullaniciButon = new javax.swing.JButton();
        hideBar = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        sanatcilarPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        sanatciUlkeComboBox = new javax.swing.JComboBox<>();
        sanatciAdi = new javax.swing.JTextField();
        sanatciEkleButon = new javax.swing.JButton();
        sanatciSilButon = new javax.swing.JButton();
        sanatciGuncelleButon = new javax.swing.JButton();
        sanatciReset = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        sanatciTablo = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        albumlerPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        albumlerTablo = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        albumAdi = new javax.swing.JTextField();
        albumSanatciComboBox = new javax.swing.JComboBox<>();
        albumTarih = new javax.swing.JTextField();
        albumTurComboBox = new javax.swing.JComboBox<>();
        albumEkleButon = new javax.swing.JButton();
        albumSilButon = new javax.swing.JButton();
        albumGuncelle = new javax.swing.JButton();
        albumResetButon = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        sarkilarPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        sarkilarTablo = new javax.swing.JTable();
        jLabelSarki = new javax.swing.JLabel();
        sarkiAdi = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        sarkiTarih = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        sarkilarAlbumComboBox = new javax.swing.JComboBox<>();
        sarkilarSanatciComboBox = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        sarkilarSarkiTurComboBox = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        sarkiSuresi = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        sarkiDinlenmeSayisi = new javax.swing.JTextField();
        sarkilarEkleButon = new javax.swing.JButton();
        sarkilarSilButon = new javax.swing.JButton();
        sarkilarGuncelleButon = new javax.swing.JButton();
        sarkilarResetButon = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        kullanicilarPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        kullaniciTablo = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Müzik Dosyam");

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sidePanel.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Admin Paneli");

        sanatciButon.setText("Sanatçılar");
        sanatciButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sanatciButonActionPerformed(evt);
            }
        });

        albumButon.setText("Albümler");
        albumButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                albumButonActionPerformed(evt);
            }
        });

        sarkiButon.setText("Şarkılar");
        sarkiButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sarkiButonActionPerformed(evt);
            }
        });

        kullaniciButon.setText("Kullanıcılar");
        kullaniciButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kullaniciButonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sidePanelLayout = new javax.swing.GroupLayout(sidePanel);
        sidePanel.setLayout(sidePanelLayout);
        sidePanelLayout.setHorizontalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
            .addComponent(sanatciButon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(albumButon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(sarkiButon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(kullaniciButon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        sidePanelLayout.setVerticalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(133, 133, 133)
                .addComponent(sanatciButon)
                .addGap(18, 18, 18)
                .addComponent(albumButon)
                .addGap(18, 18, 18)
                .addComponent(sarkiButon)
                .addGap(18, 18, 18)
                .addComponent(kullaniciButon)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(sidePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 543));

        javax.swing.GroupLayout hideBarLayout = new javax.swing.GroupLayout(hideBar);
        hideBar.setLayout(hideBarLayout);
        hideBarLayout.setHorizontalGroup(
            hideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 910, Short.MAX_VALUE)
        );
        hideBarLayout.setVerticalGroup(
            hideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanel1.add(hideBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, 910, 30));

        jTabbedPane1.setName(""); // NOI18N

        jLabel2.setText("Sanatçı Adı");

        jLabel3.setText("Ülke");

        sanatciEkleButon.setText("Ekle");
        sanatciEkleButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sanatciEkleButonActionPerformed(evt);
            }
        });

        sanatciSilButon.setText("Sil");
        sanatciSilButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sanatciSilButonActionPerformed(evt);
            }
        });

        sanatciGuncelleButon.setText("Güncelle");
        sanatciGuncelleButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sanatciGuncelleButonActionPerformed(evt);
            }
        });

        sanatciReset.setText("Reset");
        sanatciReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sanatciResetActionPerformed(evt);
            }
        });

        sanatciTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        sanatciTablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sanatciTabloMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(sanatciTablo);

        javax.swing.GroupLayout sanatcilarPanelLayout = new javax.swing.GroupLayout(sanatcilarPanel);
        sanatcilarPanel.setLayout(sanatcilarPanelLayout);
        sanatcilarPanelLayout.setHorizontalGroup(
            sanatcilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sanatcilarPanelLayout.createSequentialGroup()
                .addGroup(sanatcilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sanatcilarPanelLayout.createSequentialGroup()
                        .addGroup(sanatcilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(sanatcilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sanatciUlkeComboBox, 0, 140, Short.MAX_VALUE)
                            .addComponent(sanatciAdi)))
                    .addGroup(sanatcilarPanelLayout.createSequentialGroup()
                        .addComponent(sanatciEkleButon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sanatciSilButon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sanatciGuncelleButon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sanatciReset)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(sanatcilarPanelLayout.createSequentialGroup()
                .addGroup(sanatcilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 885, Short.MAX_VALUE)
                    .addComponent(jSeparator2))
                .addContainerGap())
        );
        sanatcilarPanelLayout.setVerticalGroup(
            sanatcilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sanatcilarPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sanatcilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(sanatciAdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(sanatcilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(sanatciUlkeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(sanatcilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sanatciEkleButon)
                    .addComponent(sanatciSilButon)
                    .addComponent(sanatciGuncelleButon)
                    .addComponent(sanatciReset))
                .addContainerGap(182, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Sanatcilar", sanatcilarPanel);

        albumlerTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        albumlerTablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                albumlerTabloMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(albumlerTablo);

        jLabel4.setText("Albüm Adı");

        jLabel5.setText("Sanatçı");

        jLabel6.setText("Albüm Çıkış Tarihi");

        jLabel7.setText("Albüm Tür");

        albumEkleButon.setText("Ekle");
        albumEkleButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                albumEkleButonActionPerformed(evt);
            }
        });

        albumSilButon.setText("Sil");
        albumSilButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                albumSilButonActionPerformed(evt);
            }
        });

        albumGuncelle.setText("Güncelle");
        albumGuncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                albumGuncelleActionPerformed(evt);
            }
        });

        albumResetButon.setText("Reset");
        albumResetButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                albumResetButonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout albumlerPanelLayout = new javax.swing.GroupLayout(albumlerPanel);
        albumlerPanel.setLayout(albumlerPanelLayout);
        albumlerPanelLayout.setHorizontalGroup(
            albumlerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(albumlerPanelLayout.createSequentialGroup()
                .addGroup(albumlerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 885, Short.MAX_VALUE)
                    .addGroup(albumlerPanelLayout.createSequentialGroup()
                        .addGroup(albumlerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(albumlerPanelLayout.createSequentialGroup()
                                .addComponent(albumEkleButon, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(albumSilButon, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(albumGuncelle, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(albumResetButon, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, albumlerPanelLayout.createSequentialGroup()
                                .addGroup(albumlerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(albumlerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(albumAdi)
                                    .addComponent(albumSanatciComboBox, 0, 186, Short.MAX_VALUE)
                                    .addComponent(albumTarih)
                                    .addComponent(albumTurComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSeparator1))
                .addContainerGap())
        );
        albumlerPanelLayout.setVerticalGroup(
            albumlerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(albumlerPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(albumlerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(albumAdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(albumlerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(albumSanatciComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(albumlerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(albumTarih, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(albumlerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(albumTurComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(albumlerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(albumEkleButon)
                    .addComponent(albumSilButon)
                    .addComponent(albumGuncelle)
                    .addComponent(albumResetButon))
                .addGap(0, 184, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Albümler", albumlerPanel);

        sarkilarTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        sarkilarTablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sarkilarTabloMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(sarkilarTablo);

        jLabelSarki.setText("Şarkı Adı");

        jLabel9.setText("Şarkı Tarih");

        jLabel10.setText("Albüm");

        jLabel11.setText("Sanatçı");

        jLabel12.setText("Şarkı Türü");

        jLabel13.setText("Şarkı Süresi");

        jLabel14.setText("Dinlenme Sayısı");

        sarkilarEkleButon.setText("Ekle");
        sarkilarEkleButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sarkilarEkleButonActionPerformed(evt);
            }
        });

        sarkilarSilButon.setText("Sil");
        sarkilarSilButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sarkilarSilButonActionPerformed(evt);
            }
        });

        sarkilarGuncelleButon.setText("Güncelle");
        sarkilarGuncelleButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sarkilarGuncelleButonActionPerformed(evt);
            }
        });

        sarkilarResetButon.setText("Reset");
        sarkilarResetButon.setToolTipText("");
        sarkilarResetButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sarkilarResetButonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sarkilarPanelLayout = new javax.swing.GroupLayout(sarkilarPanel);
        sarkilarPanel.setLayout(sarkilarPanelLayout);
        sarkilarPanelLayout.setHorizontalGroup(
            sarkilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sarkilarPanelLayout.createSequentialGroup()
                .addGroup(sarkilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelSarki, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sarkilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sarkiAdi)
                    .addComponent(sarkiTarih)
                    .addComponent(sarkilarSarkiTurComboBox, 0, 136, Short.MAX_VALUE)
                    .addComponent(sarkiDinlenmeSayisi))
                .addGap(36, 36, 36)
                .addGroup(sarkilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(sarkilarPanelLayout.createSequentialGroup()
                        .addGroup(sarkilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(sarkilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sarkiSuresi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sarkilarSanatciComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sarkilarAlbumComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(sarkilarPanelLayout.createSequentialGroup()
                        .addComponent(sarkilarEkleButon, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sarkilarSilButon, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sarkilarGuncelleButon, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sarkilarResetButon)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jSeparator3)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 895, Short.MAX_VALUE)
        );
        sarkilarPanelLayout.setVerticalGroup(
            sarkilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sarkilarPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(sarkilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSarki)
                    .addComponent(sarkiAdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(sarkilarAlbumComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(sarkilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sarkilarSanatciComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(sarkiTarih, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(29, 29, 29)
                .addGroup(sarkilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(sarkilarSarkiTurComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(sarkiSuresi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(sarkilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sarkiDinlenmeSayisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(sarkilarEkleButon)
                    .addComponent(sarkilarSilButon)
                    .addComponent(sarkilarGuncelleButon)
                    .addComponent(sarkilarResetButon))
                .addGap(76, 76, 76))
        );

        jTabbedPane1.addTab("Şarkılar", sarkilarPanel);

        kullaniciTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Kullanıcı ID", "Kullanıcı Adı", "Şifre", "Mail", "Ülke", "Hesap türü", "Premium Ödeme"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(kullaniciTablo);

        javax.swing.GroupLayout kullanicilarPanelLayout = new javax.swing.GroupLayout(kullanicilarPanel);
        kullanicilarPanel.setLayout(kullanicilarPanelLayout);
        kullanicilarPanelLayout.setHorizontalGroup(
            kullanicilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 895, Short.MAX_VALUE)
        );
        kullanicilarPanelLayout.setVerticalGroup(
            kullanicilarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kullanicilarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Kullanıcılar", kullanicilarPanel);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, -2, -1, 580));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sanatciButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sanatciButonActionPerformed
        albumDegiskenleriYukle();
        sarkilarDegiskenleriYukle();
        jTabbedPane1.setSelectedIndex(0);
        DefaultTableModel model = new DefaultTableModel(new String[]{"Sanatçı ID", "Sanatçı Adı", "Ülke"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "SELECT * FROM sanatcilar WHERE 1";

            Statement ifade = conn.createStatement();
            ResultSet rs = ifade.executeQuery(query);
            while (rs.next()) {
                String a = rs.getString("sanatciId");
                String b = rs.getString("sanatciAdi");
                String c = rs.getString("sanatciUlke");

                model.addRow(new Object[]{a, b, c});
            }
            sanatciTablo.setModel(model);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
    }//GEN-LAST:event_sanatciButonActionPerformed
    ArrayList<Integer> albumIds = new ArrayList<Integer>();
    ArrayList<Integer> artistIds = new ArrayList<Integer>();
    ArrayList<Integer> songIds = new ArrayList<Integer>();


    private void albumButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_albumButonActionPerformed
        albumDegiskenleriYukle();
        sarkilarDegiskenleriYukle();
        jTabbedPane1.setSelectedIndex(1);
        DefaultTableModel model = new DefaultTableModel(new String[]{"Albüm ID", "Albüm Adı", "Sanatçı ID'leri", "Album Tarihi", "Albüm Türü"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };;

        albumTurComboBox.setSelectedIndex(-1);
        albumSanatciComboBox.setSelectedIndex(-1);
        albumAdi.setText("");
        albumTarih.setText("");

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "SELECT * FROM albumler WHERE 1";
            String query2 = "SELECT * FROM sanatcilar WHERE 1";
            Statement ifade = conn.createStatement();
            ResultSet rs = ifade.executeQuery(query);
            while (rs.next()) {
                String a = rs.getString("albumId");
                String b = rs.getString("albumAdı");
                String c = rs.getString("sanatcilar");
                String d = rs.getString("albumTarih");
                String e = rs.getString("albumTur");
                model.addRow(new Object[]{a, b, c, d, e});

            }
            albumlerTablo.setModel(model);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
    }//GEN-LAST:event_albumButonActionPerformed

    private void sarkiButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sarkiButonActionPerformed
        albumDegiskenleriYukle();
        sarkilarDegiskenleriYukle();
        jTabbedPane1.setSelectedIndex(2);
        sarkilarSarkiTurComboBox.setSelectedIndex(-1);
        sarkilarAlbumComboBox.setSelectedIndex(-1);
        sarkilarSanatciComboBox.setSelectedIndex(-1);
        sarkiAdi.setText("");
        sarkiTarih.setText("");
        sarkiDinlenmeSayisi.setText("");
        sarkiSuresi.setText("");

        DefaultTableModel model = new DefaultTableModel(new String[]{"Sarki ID", "Şarkı Adı", "Şarkı Tarih", "Albüm ID", "Sanatçı ID", "Şarkı Tür", "Süre", "Dinlenme Sayısı"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "SELECT* " + "FROM sarkilar" + " WHERE 1";

            Statement ifade = conn.createStatement();
            ResultSet rs = ifade.executeQuery(query);
            while (rs.next()) {
                String a = rs.getString("sarkiId");
                String b = rs.getString("sarkiAdi");
                String c = rs.getString("sarkiTarih");
                String d = rs.getString("albumId");
                String e = rs.getString("sarkiciId");
                String f = rs.getString("sarkiTur");
                String g = rs.getString("sarkiSure");
                String h = rs.getString("sarkiDinlenmeSayisi");

                model.addRow(new Object[]{a, b, c, d, e, f, g, h});

            }
            sarkilarTablo.setModel(model);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
    }//GEN-LAST:event_sarkiButonActionPerformed

    private void kullaniciButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kullaniciButonActionPerformed
        albumDegiskenleriYukle();
        sarkilarDegiskenleriYukle();
        jTabbedPane1.setSelectedIndex(3);
        DefaultTableModel model = new DefaultTableModel(new String[]{"Kullanıcı ID", "Kullanıcı Adı", "Şifre", "Mail", "Ülke", "Hesap Türü", "Premium Odeme"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "SELECT * FROM kullanicilar WHERE 1";

            Statement ifade = conn.createStatement();
            ResultSet rs = ifade.executeQuery(query);
            while (rs.next()) {
                String a = rs.getString("kullaniciId");
                String b = rs.getString("kullaniciAdi");
                String c = rs.getString("kullaniciSifre");
                String d = rs.getString("kullaniciMail");
                String e = rs.getString("kullaniciUlke");
                String f = rs.getString("kullaniciTipi");
                String g = rs.getString("kullaniciOdemeKontrolu");

                model.addRow(new Object[]{a, b, c, d, e, f, g});

            }
            kullaniciTablo.setModel(model);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
    }//GEN-LAST:event_kullaniciButonActionPerformed

    private void sanatciEkleButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sanatciEkleButonActionPerformed
        String artistName = sanatciAdi.getText();
        String artistNat = sanatciUlkeComboBox.getSelectedItem().toString();

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "INSERT INTO sanatcilar(sanatciAdi,sanatciUlke) "
                    + "VALUES('" + artistName + "','" + artistNat + "')";

            Statement ifade = conn.createStatement();
            ifade.execute(query);

            JOptionPane.showMessageDialog(sanatcilarPanel, "Sanatçı Kaydınız Başarıyla Oluşturuldu.");
            sanatciTabloGuncelle();
            sanatciAdi.setText("");

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
    }//GEN-LAST:event_sanatciEkleButonActionPerformed

    private void sanatciGuncelleButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sanatciGuncelleButonActionPerformed
        // TODO add your handling code here:

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            int row = sanatciTablo.getSelectedRow();
            System.out.println("lan " + sanatciAdi.getText());
            String query = "UPDATE sanatcilar SET sanatciAdi='"
                    + sanatciAdi.getText() + "', sanatciUlke='"
                    + sanatciUlkeComboBox.getSelectedItem().toString() + "' WHERE sanatciAdi='" + degistirelecekSanatciAdi + "'";

            Statement ifade = conn.createStatement();
            ifade.execute(query);
            JOptionPane.showMessageDialog(sanatcilarPanel, "Sanatçı Güncellendi.");
            sanatciTabloGuncelle();
            sanatciAdi.setText("");
            sanatciUlkeComboBox.setSelectedIndex(-1);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }

    }//GEN-LAST:event_sanatciGuncelleButonActionPerformed
    String degistirelecekSanatciAdi;
    private void sanatciTabloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sanatciTabloMouseClicked
        // TODO add your handling code here:
        int row = sanatciTablo.getSelectedRow();
        sanatciAdi.setText(sanatciTablo.getModel().getValueAt(row, 1).toString());
        int indexx = indexBul(sanatciTablo.getModel().getValueAt(row, 2).toString());
        sanatciUlkeComboBox.setSelectedIndex(indexx);
        degistirelecekSanatciAdi = sanatciAdi.getText();
    }//GEN-LAST:event_sanatciTabloMouseClicked

    private void sanatciSilButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sanatciSilButonActionPerformed
        // TODO add your handling code here:

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            int row = sanatciTablo.getSelectedRow();
            String query = "DELETE FROM sanatcilar WHERE sanatciAdi='"
                    + sanatciAdi.getText() + "'";

            Statement ifade = conn.createStatement();
            ifade.execute(query);
            JOptionPane.showMessageDialog(sanatcilarPanel, "Sanatçı silindi.");
            sanatciTabloGuncelle();
            sanatciAdi.setText("");
            sanatciUlkeComboBox.setSelectedIndex(-1);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }

        sanatciTabloGuncelle();
        sanatciAdi.setText("");
        sanatciUlkeComboBox.setSelectedIndex(-1);
    }//GEN-LAST:event_sanatciSilButonActionPerformed

    private void sanatciResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sanatciResetActionPerformed
        sanatciTabloGuncelle();
        sanatciAdi.setText("");
        sanatciUlkeComboBox.setSelectedIndex(-1);
    }//GEN-LAST:event_sanatciResetActionPerformed

    public int artistIdBul(String artistName) {
        int arananId = 0;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");
            String query2 = "SELECT sanatciId "
                    + "FROM sanatcilar "
                    + "WHERE sanatciAdi ='" + artistName + "'";
            Statement ifade2 = conn.createStatement();
            ResultSet rs2 = ifade2.executeQuery(query2);
            while (rs2.next()) {
                String a = rs2.getString("sanatciId");
                arananId = (Integer.parseInt(a));
            }
        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
        return arananId;
    }


    private void albumEkleButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_albumEkleButonActionPerformed

        String albumName = albumAdi.getText();
        String artistName = albumSanatciComboBox.getSelectedItem().toString();
        int artistId = artistIdBul(artistName);

        String albumDate = albumTarih.getText();
        String albumType = albumTurComboBox.getSelectedItem().toString();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");
            String query = "INSERT INTO albumler(albumAdi,sanatcilar,albumTarih,albumTur) "
                    + "VALUES('" + albumName + "','" + artistId + "','" + albumDate + "','" + albumType + "')";

            Statement ifade = conn.createStatement();
            ifade.execute(query);
            JOptionPane.showMessageDialog(null, "Albüm Kaydınız Başarıyla Oluşturuldu.");
            albumTabloGuncelle();
            albumAdi.setText("");
            albumSanatciComboBox.setSelectedIndex(-1);
            albumTarih.setText("");
            albumTurComboBox.setSelectedIndex(-1);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
        albumTabloGuncelle();

    }//GEN-LAST:event_albumEkleButonActionPerformed

    private void albumlerTabloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_albumlerTabloMouseClicked
        int row = albumlerTablo.getSelectedRow();
        degistirelecekAlbumAdi = albumlerTablo.getModel().getValueAt(row, 1).toString();
        albumAdi.setText(albumlerTablo.getModel().getValueAt(row, 1).toString());
        int indexx = Integer.parseInt(albumlerTablo.getModel().getValueAt(row, 2).toString());
        albumTarih.setText(albumlerTablo.getModel().getValueAt(row, 3).toString());
        switch (albumlerTablo.getModel().getValueAt(row, 4).toString()) {
            case "Pop":
                albumTurComboBox.setSelectedIndex(0);
                break;
            case "Jazz":
                albumTurComboBox.setSelectedIndex(1);
                break;
            case "Klasik":
                albumTurComboBox.setSelectedIndex(2);
        }
        albumSanatciComboBox.setSelectedIndex(indexx - 1);

    }//GEN-LAST:event_albumlerTabloMouseClicked

    private void albumSilButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_albumSilButonActionPerformed

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            int row = sanatciTablo.getSelectedRow();
            String query = "DELETE FROM albumler WHERE albumAdi='"
                    + albumAdi.getText() + "'";

            Statement ifade = conn.createStatement();
            ifade.execute(query);
            JOptionPane.showMessageDialog(albumlerPanel, "Albüm silindi.");

            albumTabloGuncelle();
            albumTurComboBox.setSelectedIndex(-1);
            albumSanatciComboBox.setSelectedIndex(-1);
            albumAdi.setText("");
            albumTarih.setText("");

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }

    }//GEN-LAST:event_albumSilButonActionPerformed
    String degistirelecekAlbumAdi;
    private void albumGuncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_albumGuncelleActionPerformed
        int artistId = artistIds.get(albumSanatciComboBox.getSelectedIndex());
        String albumType = albumTurComboBox.getSelectedItem().toString();

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            int row = sanatciTablo.getSelectedRow();
            String query = "UPDATE albumler SET albumAdi='"
                    + albumAdi.getText() + "', sanatcilar='"
                    + artistId + "', albumTarih='" + albumTarih.getText() + "', albumTur='" + albumType
                    + "' WHERE albumAdi='" + degistirelecekAlbumAdi + "'";

            Statement ifade = conn.createStatement();
            ifade.execute(query);
            JOptionPane.showMessageDialog(albumlerPanel, "Albüm Güncellendi.");
            albumTabloGuncelle();
            albumAdi.setText("");
            albumTarih.setText("");
            albumTurComboBox.setSelectedIndex(-1);
            albumSanatciComboBox.setSelectedIndex(-1);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }

    }//GEN-LAST:event_albumGuncelleActionPerformed

    private void albumResetButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_albumResetButonActionPerformed
        albumAdi.setText("");
        albumTarih.setText("");
        albumTurComboBox.setSelectedIndex(-1);
        albumSanatciComboBox.setSelectedIndex(-1);
    }//GEN-LAST:event_albumResetButonActionPerformed

    private void sarkilarTabloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sarkilarTabloMouseClicked
        int row = sarkilarTablo.getSelectedRow();
        sarkiAdi.setText(sarkilarTablo.getModel().getValueAt(row, 1).toString());
        sarkiTarih.setText(sarkilarTablo.getModel().getValueAt(row, 2).toString());
        int indexx = Integer.parseInt(sarkilarTablo.getModel().getValueAt(row, 3).toString());
        sarkilarAlbumComboBox.setSelectedIndex(indexx - 1);
        int indexx2 = Integer.parseInt(sarkilarTablo.getModel().getValueAt(row, 4).toString());
        sarkilarSanatciComboBox.setSelectedIndex(indexx2 - 1);
        switch (sarkilarTablo.getModel().getValueAt(row, 5).toString()) {
            case "Pop":
                sarkilarSarkiTurComboBox.setSelectedIndex(0);
                break;
            case "Jazz":
                sarkilarSarkiTurComboBox.setSelectedIndex(1);
                break;
            case "Klasik":
                sarkilarSarkiTurComboBox.setSelectedIndex(2);
        }
        sarkiSuresi.setText(sarkilarTablo.getModel().getValueAt(row, 6).toString());
        sarkiDinlenmeSayisi.setText(sarkilarTablo.getModel().getValueAt(row, 7).toString());


    }//GEN-LAST:event_sarkilarTabloMouseClicked

    public int albumIdBul(String albumAdi) {
        int arananId = 0;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");
            String query2 = "SELECT albumId "
                    + "FROM albumler "
                    + "WHERE albumAdi ='" + albumAdi + "'";
            Statement ifade2 = conn.createStatement();
            ResultSet rs2 = ifade2.executeQuery(query2);
            while (rs2.next()) {
                String a = rs2.getString("albumId");
                arananId = (Integer.parseInt(a));
            }
        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
        return arananId;

    }

    private void sarkilarEkleButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sarkilarEkleButonActionPerformed
        String songName = sarkiAdi.getText();
        String songDate = sarkiTarih.getText();

        int songAlbumId = albumIdBul(sarkilarAlbumComboBox.getSelectedItem().toString());
        int songArtistId = artistIdBul(sarkilarSanatciComboBox.getSelectedItem().toString());
        String songType = sarkilarSarkiTurComboBox.getSelectedItem().toString();
        String songDuration = sarkiSuresi.getText();
        int songPlayCount = Integer.parseInt(sarkiDinlenmeSayisi.getText().toString());

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "INSERT INTO sarkilar(sarkiAdi,sarkiTarih,albumId,sarkiciId,sarkiTur,sarkiSure,sarkiDinlenmeSayisi) "
                    + "VALUES('" + songName + "','" + songDate + "','" + songAlbumId + "','" + songArtistId + "','" + songType + "','"
                    + songDuration + "','" + songPlayCount + "')";

            Statement ifade = conn.createStatement();
            ifade.execute(query);
            JOptionPane.showMessageDialog(sanatcilarPanel, "Şarkı kaydı başarıyla oluşturuldu.");
            sarkiTabloGuncelle();
            sarkiAdi.setText("");
            sarkiTarih.setText("");
            sarkilarSanatciComboBox.setSelectedIndex(-1);
            sarkilarAlbumComboBox.setSelectedIndex(-1);
            sarkilarSarkiTurComboBox.setSelectedIndex(-1);
            albumTurComboBox.setSelectedIndex(-1);
            sarkiSuresi.setText("");
            sarkiDinlenmeSayisi.setText("");

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
        sarkiTabloGuncelle();

    }//GEN-LAST:event_sarkilarEkleButonActionPerformed

    private void sarkilarSilButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sarkilarSilButonActionPerformed

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            int row = sanatciTablo.getSelectedRow();
            String query = "DELETE FROM sarkilar WHERE sarkiAdi='"
                    + sarkiAdi.getText() + "'";

            Statement ifade = conn.createStatement();
            ifade.execute(query);
            JOptionPane.showMessageDialog(albumlerPanel, "Sarki silindi.");

            sarkiTabloGuncelle();
            sarkiAdi.setText("");
            sarkiTarih.setText("");
            sarkilarSanatciComboBox.setSelectedIndex(-1);
            sarkilarAlbumComboBox.setSelectedIndex(-1);
            sarkilarSarkiTurComboBox.setSelectedIndex(-1);
            albumTurComboBox.setSelectedIndex(-1);
            sarkiSuresi.setText("");
            sarkiDinlenmeSayisi.setText("");

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }

    }//GEN-LAST:event_sarkilarSilButonActionPerformed
    String degistirilecekSarkiAdi;
    private void sarkilarGuncelleButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sarkilarGuncelleButonActionPerformed
        int row = sarkilarTablo.getSelectedRow();
        degistirilecekSarkiAdi = sarkilarTablo.getModel().getValueAt(row, 1).toString();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "UPDATE sarkilar SET sarkiAdi='"
                    + sarkiAdi.getText() + "', sarkiTarih='"
                    + sarkiTarih.getText() + "', albumId='" + albumIds.get(sarkilarAlbumComboBox.getSelectedIndex())
                    + "', sarkiciId='" + artistIds.get(sarkilarSanatciComboBox.getSelectedIndex())
                    + "', sarkiTur='" + sarkilarSarkiTurComboBox.getSelectedItem().toString()
                    + "', sarkiSure='" + sarkiSuresi.getText()
                    + "', sarkiDinlenmeSayisi='" + Integer.parseInt(sarkiDinlenmeSayisi.getText())
                    + "' WHERE sarkiAdi='" + degistirilecekSarkiAdi + "'";

            Statement ifade = conn.createStatement();
            ifade.execute(query);
            JOptionPane.showMessageDialog(albumlerPanel, "Şarkı Güncellendi.");

            sarkiTabloGuncelle();
            sarkiAdi.setText("");
            sarkiTarih.setText("");
            sarkilarSanatciComboBox.setSelectedIndex(-1);
            sarkilarAlbumComboBox.setSelectedIndex(-1);
            sarkilarSarkiTurComboBox.setSelectedIndex(-1);
            albumTurComboBox.setSelectedIndex(-1);
            sarkiSuresi.setText("");
            sarkiDinlenmeSayisi.setText("");

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
    }//GEN-LAST:event_sarkilarGuncelleButonActionPerformed

    private void sarkilarResetButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sarkilarResetButonActionPerformed
        sarkiAdi.setText("");
        sarkiTarih.setText("");
        sarkilarSanatciComboBox.setSelectedIndex(-1);
        sarkilarAlbumComboBox.setSelectedIndex(-1);
        sarkilarSarkiTurComboBox.setSelectedIndex(-1);
        albumTurComboBox.setSelectedIndex(-1);
        sarkiSuresi.setText("");
        sarkiDinlenmeSayisi.setText("");
    }//GEN-LAST:event_sarkilarResetButonActionPerformed

    public void sarkiTabloGuncelle() {
        DefaultTableModel model = new DefaultTableModel(new String[]{"Sarki ID", "Şarkı Adı", "Şarkı Tarih", "Albüm ID", "Sanatçı ID", "Şarkı Tür", "Süre", "Dinlenme Sayısı"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "SELECT* " + "FROM sarkilar" + " WHERE 1";

            Statement ifade = conn.createStatement();
            ResultSet rs = ifade.executeQuery(query);
            while (rs.next()) {
                String a = rs.getString("sarkiId");
                String b = rs.getString("sarkiAdi");
                String c = rs.getString("sarkiTarih");
                String d = rs.getString("albumId");
                String e = rs.getString("sarkiciId");
                String f = rs.getString("sarkiTur");
                String g = rs.getString("sarkiSure");
                String h = rs.getString("sarkiDinlenmeSayisi");

                model.addRow(new Object[]{a, b, c, d, e, f, g, h});

            }
            sarkilarTablo.setModel(model);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }
    }

    public void albumTabloGuncelle() {
        DefaultTableModel model = new DefaultTableModel(new String[]{"Albüm ID", "Albüm Adı", "Sanatçı ID'leri", "Album Tarihi", "Albüm Türü"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "SELECT * FROM albumler WHERE 1";
            Statement ifade = conn.createStatement();
            ResultSet rs = ifade.executeQuery(query);
            while (rs.next()) {
                String a = rs.getString("albumId");
                String b = rs.getString("albumAdı");
                String c = rs.getString("sanatcilar");
                String d = rs.getString("albumTarih");
                String e = rs.getString("albumTur");
                model.addRow(new Object[]{a, b, c, d, e});

            }
            albumlerTablo.setModel(model);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }

    }

    public void sanatciTabloGuncelle() {
        DefaultTableModel model = new DefaultTableModel(new String[]{"Sanatçı ID", "Sanatçı Adı", "Ülke"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/muzikdosyam", "root", "");
            System.out.println("Veritabanına Bağlandı.");

            String query = "SELECT * FROM sanatcilar WHERE 1";

            Statement ifade = conn.createStatement();
            ResultSet rs = ifade.executeQuery(query);
            while (rs.next()) {
                String a = rs.getString("sanatciId");
                String b = rs.getString("sanatciAdi");
                String c = rs.getString("sanatciUlke");

                model.addRow(new Object[]{a, b, c});

            }
            sanatciTablo.setModel(model);

        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Veritabanına Bağlanamadı." + e);

        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField albumAdi;
    private javax.swing.JButton albumButon;
    private javax.swing.JButton albumEkleButon;
    private javax.swing.JButton albumGuncelle;
    private javax.swing.JButton albumResetButon;
    private javax.swing.JComboBox<String> albumSanatciComboBox;
    private javax.swing.JButton albumSilButon;
    private javax.swing.JTextField albumTarih;
    private javax.swing.JComboBox<String> albumTurComboBox;
    private javax.swing.JPanel albumlerPanel;
    private javax.swing.JTable albumlerTablo;
    private javax.swing.JPanel hideBar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelSarki;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton kullaniciButon;
    private javax.swing.JTable kullaniciTablo;
    private javax.swing.JPanel kullanicilarPanel;
    private javax.swing.JTextField sanatciAdi;
    private javax.swing.JButton sanatciButon;
    private javax.swing.JButton sanatciEkleButon;
    private javax.swing.JButton sanatciGuncelleButon;
    private javax.swing.JButton sanatciReset;
    private javax.swing.JButton sanatciSilButon;
    private javax.swing.JTable sanatciTablo;
    private javax.swing.JComboBox<String> sanatciUlkeComboBox;
    private javax.swing.JPanel sanatcilarPanel;
    private javax.swing.JTextField sarkiAdi;
    private javax.swing.JButton sarkiButon;
    private javax.swing.JTextField sarkiDinlenmeSayisi;
    private javax.swing.JTextField sarkiSuresi;
    private javax.swing.JTextField sarkiTarih;
    private javax.swing.JComboBox<String> sarkilarAlbumComboBox;
    private javax.swing.JButton sarkilarEkleButon;
    private javax.swing.JButton sarkilarGuncelleButon;
    private javax.swing.JPanel sarkilarPanel;
    private javax.swing.JButton sarkilarResetButon;
    private javax.swing.JComboBox<String> sarkilarSanatciComboBox;
    private javax.swing.JComboBox<String> sarkilarSarkiTurComboBox;
    private javax.swing.JButton sarkilarSilButon;
    private javax.swing.JTable sarkilarTablo;
    private javax.swing.JPanel sidePanel;
    // End of variables declaration//GEN-END:variables
}
